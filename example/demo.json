{"last_node_id": 86, "last_link_id": 90, "nodes": [{"id": 51, "type": "Anything Everywhere3", "pos": [1703, -95], "size": {"0": 210, "1": 66}, "flags": {}, "order": 9, "mode": 0, "inputs": [{"name": "MODEL", "type": "*", "link": 45, "color_on": "#B39DDB"}, {"name": "CLIP", "type": "*", "link": 46, "color_on": "#FFD500"}, {"name": "VAE", "type": "*", "link": 47, "color_on": "#FF6E6E"}], "properties": {"Node name for S&R": "Anything Everywhere3", "group_restricted": 0, "color_restricted": 0}, "widgets_values": []}, {"id": 37, "type": "CLIPTextEncode", "pos": [1041, 249], "size": {"0": 210, "1": 54}, "flags": {"collapsed": true}, "order": 15, "mode": 0, "inputs": [{"name": "clip", "type": "CLIP", "link": null}, {"name": "text", "type": "STRING", "link": 28, "widget": {"name": "text"}, "slot_index": 1}], "outputs": [{"name": "CONDITIONING", "type": "CONDITIONING", "links": [36], "shape": 3, "slot_index": 0}], "properties": {"Node name for S&R": "CLIPTextEncode"}, "widgets_values": [""]}, {"id": 48, "type": "CLIPTextEncode", "pos": [1410, 1050], "size": {"0": 400, "1": 200}, "flags": {"collapsed": true}, "order": 13, "mode": 0, "inputs": [{"name": "clip", "type": "CLIP", "link": null}, {"name": "text", "type": "STRING", "link": 60, "widget": {"name": "text"}}], "outputs": [{"name": "CONDITIONING", "type": "CONDITIONING", "links": [41], "shape": 3, "slot_index": 0}], "properties": {"Node name for S&R": "CLIPTextEncode"}, "widgets_values": [""]}, {"id": 47, "type": "CLIPTextEncode", "pos": [1410, 1010], "size": {"0": 400, "1": 200}, "flags": {"collapsed": true}, "order": 14, "mode": 0, "inputs": [{"name": "clip", "type": "CLIP", "link": null}, {"name": "text", "type": "STRING", "link": 62, "widget": {"name": "text"}}], "outputs": [{"name": "CONDITIONING", "type": "CONDITIONING", "links": [40], "shape": 3, "slot_index": 0}], "properties": {"Node name for S&R": "CLIPTextEncode"}, "widgets_values": ["a toy, disney"]}, {"id": 57, "type": "Reroute", "pos": [776, 995], "size": [75, 26], "flags": {}, "order": 11, "mode": 0, "inputs": [{"name": "", "type": "*", "link": 61, "widget": {"name": "value"}}], "outputs": [{"name": "", "type": "STRING", "links": [62], "slot_index": 0}], "properties": {"showOutputText": false, "horizontal": false}}, {"id": 56, "type": "Reroute", "pos": [770, 1030], "size": [75, 26], "flags": {}, "order": 10, "mode": 0, "inputs": [{"name": "", "type": "*", "link": 59, "widget": {"name": "value"}}], "outputs": [{"name": "", "type": "STRING", "links": [60], "slot_index": 0}], "properties": {"showOutputText": false, "horizontal": false}}, {"id": 52, "type": "Anything Everywhere", "pos": [1674, -274], "size": {"0": 210, "1": 26}, "flags": {}, "order": 7, "mode": 0, "inputs": [{"name": "LATENT", "type": "*", "link": 48, "color_on": "#FF9CF9"}], "properties": {"Node name for S&R": "Anything Everywhere", "group_restricted": 0, "color_restricted": 0}, "widgets_values": []}, {"id": 45, "type": "EmptyLatentImage", "pos": [1354, -272], "size": {"0": 315, "1": 106}, "flags": {}, "order": 0, "mode": 0, "outputs": [{"name": "LATENT", "type": "LATENT", "links": [48], "shape": 3, "slot_index": 0}], "properties": {"Node name for S&R": "EmptyLatentImage"}, "widgets_values": [1024, 1024, 1]}, {"id": 82, "type": "Seed Everywhere", "pos": [49, 1169], "size": {"0": 315, "1": 82}, "flags": {}, "order": 1, "mode": 0, "outputs": [{"name": "INT", "type": "INT", "links": null, "shape": 3}], "properties": {"Node name for S&R": "Seed Everywhere", "group_restricted": 0, "color_restricted": 0}, "widgets_values": [72308818241977, "randomize"]}, {"id": 80, "type": "TaraApiKeyLoader", "pos": [27, -175], "size": {"0": 210, "1": 82}, "flags": {"collapsed": true}, "order": 8, "mode": 0, "inputs": [{"name": "model", "type": "COMBO", "link": 88, "widget": {"name": "model"}}], "outputs": [{"name": "STRING", "type": "STRING", "links": [84], "shape": 3, "slot_index": 0}], "properties": {"Node name for S&R": "TaraApiKeyLoader"}, "widgets_values": ["openai/gpt-3.5-turbo", false]}, {"id": 67, "type": "PrimitiveNode", "pos": [35, -355], "size": {"0": 210, "1": 106}, "flags": {}, "order": 2, "mode": 0, "outputs": [{"name": "COMBO", "type": "COMBO", "links": [71, 88], "widget": {"name": "model"}, "slot_index": 0}], "properties": {"Run widget replace on values": false}, "widgets_values": ["openai/gpt-3.5-turbo", "fixed", ""]}, {"id": 38, "type": "CLIPTextEncode", "pos": [1036, 301], "size": {"0": 210, "1": 54}, "flags": {"collapsed": false}, "order": 17, "mode": 0, "inputs": [{"name": "clip", "type": "CLIP", "link": null}, {"name": "text", "type": "STRING", "link": 52, "widget": {"name": "text"}, "slot_index": 1}], "outputs": [{"name": "CONDITIONING", "type": "CONDITIONING", "links": [37], "shape": 3, "slot_index": 0}], "properties": {"Node name for S&R": "CLIPTextEncode"}, "widgets_values": [""]}, {"id": 49, "type": "KSampler (Efficient)", "pos": [1282, 382], "size": {"0": 325, "1": 562}, "flags": {}, "order": 18, "mode": 0, "inputs": [{"name": "model", "type": "MODEL", "link": null}, {"name": "positive", "type": "CONDITIONING", "link": 40}, {"name": "negative", "type": "CONDITIONING", "link": 41}, {"name": "latent_image", "type": "LATENT", "link": null, "slot_index": 3}, {"name": "optional_vae", "type": "VAE", "link": null}, {"name": "script", "type": "SCRIPT", "link": null}, {"name": "seed", "type": "INT", "link": null, "widget": {"name": "seed"}}], "outputs": [{"name": "MODEL", "type": "MODEL", "links": null, "shape": 3}, {"name": "CONDITIONING+", "type": "CONDITIONING", "links": null, "shape": 3}, {"name": "CONDITIONING-", "type": "CONDITIONING", "links": null, "shape": 3}, {"name": "LATENT", "type": "LATENT", "links": null, "shape": 3}, {"name": "VAE", "type": "VAE", "links": null, "shape": 3}, {"name": "IMAGE", "type": "IMAGE", "links": [], "shape": 3, "slot_index": 5}], "title": "Base", "properties": {"Node name for S&R": "KSampler (Efficient)"}, "widgets_values": [434875579368154, null, 6, 1.8, "dpmpp_sde", "karras", 1, "auto", "true"], "color": "#222", "bgcolor": "#000", "shape": 1}, {"id": 42, "type": "KSampler (Efficient)", "pos": [1623, 383], "size": {"0": 317.7077331542969, "1": 558}, "flags": {}, "order": 19, "mode": 0, "inputs": [{"name": "model", "type": "MODEL", "link": null}, {"name": "positive", "type": "CONDITIONING", "link": 36}, {"name": "negative", "type": "CONDITIONING", "link": 37}, {"name": "latent_image", "type": "LATENT", "link": null, "slot_index": 3}, {"name": "optional_vae", "type": "VAE", "link": null}, {"name": "script", "type": "SCRIPT", "link": null}, {"name": "seed", "type": "INT", "link": null, "widget": {"name": "seed"}}], "outputs": [{"name": "MODEL", "type": "MODEL", "links": null, "shape": 3}, {"name": "CONDITIONING+", "type": "CONDITIONING", "links": null, "shape": 3}, {"name": "CONDITIONING-", "type": "CONDITIONING", "links": null, "shape": 3}, {"name": "LATENT", "type": "LATENT", "links": null, "shape": 3}, {"name": "VAE", "type": "VAE", "links": null, "shape": 3}, {"name": "IMAGE", "type": "IMAGE", "links": [], "shape": 3, "slot_index": 5}], "title": "Prompt A", "properties": {"Node name for S&R": "KSampler (Efficient)"}, "widgets_values": [434875579368154, null, 6, 1.8, "dpmpp_sde", "karras", 1, "auto", "true"], "color": "#432", "bgcolor": "#653", "shape": 1}, {"id": 40, "type": "CheckpointLoaderSimple", "pos": [1221, -110], "size": {"0": 440.7713928222656, "1": 101.25428009033203}, "flags": {}, "order": 3, "mode": 0, "outputs": [{"name": "MODEL", "type": "MODEL", "links": [45], "shape": 3, "slot_index": 0}, {"name": "CLIP", "type": "CLIP", "links": [46], "shape": 3, "slot_index": 1}, {"name": "VAE", "type": "VAE", "links": [47], "shape": 3, "slot_index": 2}], "properties": {"Node name for S&R": "CheckpointLoaderSimple"}, "widgets_values": ["sdxl/dreamshaperXL_lightningDPMSDE.safetensors"]}, {"id": 85, "type": "Note", "pos": [2389, 253], "size": [541.1313600000003, 431.6166800000001], "flags": {}, "order": 4, "mode": 0, "properties": {"text": ""}, "widgets_values": ["You are an expert Stable Diffusion (image generator) prompt generator.\nYour task is to generate a positive and negative prompt. The positive prompt describes features we want, and the negative describes things we don't want.\nYou will be given a guidance text, and optionally a positive prompt and a negative prompt, and you need come up with the perfect prompt.\n\nThe words to the beginning has a higher weight the words in the end. Stable diffusion models works best when we give them a clear and concise prompt.\nOne trick is to use comma-seperated lists, and use keywords such as 4k, ultra hd, masterpiece, cinematic etc. only if they are relevant.\n\nFurthermore, we can use various artist, studio, movie names etc to get a likeness to that style. For example, \"painting by Van Gogh\" or \"scene from the movie Up\".\nSome keywords that can be useful (use caution for relevance) are: 4k, ultra hd, masterpiece, cinematic, painting, drawing, sketch, scene, movie, artist, studio, style, trending on ArtStation, DeviantArt, Behance etc.\n\nIf the guidance or the prompt calls for a particular style, we don't need style keywords such as trending on etc. in the prompt.\n\nThe prompt is specific and detailed, guiding the AI to produce a targeted and expressive image. The positive prompt can be descriptive, may contain comma-seperated keywords or sentences that makes sense\nThe negative prompt should be comma-seperated keywords, and not a sentence.\n\nUse parenthesis to highlight specific words or spaces and use a colon followed by an weight to the end of a word or group to increase or decrease weight, for example (red panda:1.2) banana:1.5 or (yellow rose:0.9)\n----\n\nFill in any missing details such as composition, lighting, background, props, art style etc."], "color": "#432", "bgcolor": "#653"}, {"id": 36, "type": "TaraPrompter", "pos": [389, 219], "size": {"0": 617.9548950195312, "1": 776.1112060546875}, "flags": {"collapsed": false}, "order": 12, "mode": 0, "inputs": [{"name": "prompt_positive", "type": "STRING", "link": 55, "widget": {"name": "prompt_positive"}}, {"name": "prompt_negative", "type": "STRING", "link": 56, "widget": {"name": "prompt_negative"}}, {"name": "model", "type": "COMBO", "link": 71, "widget": {"name": "model"}, "slot_index": 2}, {"name": "api_key", "type": "STRING", "link": 84, "widget": {"name": "api_key"}}], "outputs": [{"name": "positive", "type": "STRING", "links": [28, 90], "shape": 3, "slot_index": 0}, {"name": "negative", "type": "STRING", "links": [52], "shape": 3, "slot_index": 1}], "title": "Prompt A\n", "properties": {"Node name for S&R": "TaraPrompter"}, "widgets_values": ["mixtral-8x7b-32768", "openai/gpt-3.5-turbo", "You are a SDXL Prompt Generator\n\nA good prompt for the SDXL stable diffusion model is a meticulously crafted narrative that starts with specifying the image type to set the artistic tone. It then lays out a clear and engaging scene, methodically adding layers of detail about the main subject, the surrounding environment, and their spatial relationships. It should use precise, descriptive language to define the mood, style, and execution, incorporating technical aspects like weight syntax (e.g., \"(smiling:1.1)\") to prioritize certain features. This approach ensures a rich, coherent, and visually compelling image that aligns with the intended vision. It should be only descriptive, avoid any guidance, avoid imperative sentences and remove any such guidance from prompts beforehand.\n\nConversely, a bad prompt lacks clarity and coherence, providing insufficient context or detail. It might jump into specifics without setting the scene, mix incompatible styles or themes, or neglect to specify spatial relationships and relative importance of elements, leading to a fragmented and confusing image. It may also misuse technical tools like weight syntax, resulting in an imbalanced and ineffective visual representation.\n\nThe words to the beginning has a higher weight the words in the end. Stable diffusion models works best when we give them a clear and concise prompt. Only relevant content should be to the beginning (avoid things like \"Create a xyz\" or \"Scene:xyz\"\n\nFurthermore, we can use various artist, studio, movie names etc to get a likeness to that style. For example, \"painting by Van Gogh\" or \"scene from the movie Up\".\nSome keywords that can be useful are: 4k, ultra hd, masterpiece, cinematic, painting, drawing, sketch, scene, movie, artist, studio, style, trending on ArtStation, DeviantArt, Behance etc. (These should only be used with relevance, for example a watercolor is not 4k, or a cartoon is not a masterpiece etc)\n\nThe prompt is specific and detailed, guiding the AI to produce a targeted and expressive image. The positive prompt can be descriptive, may contain comma-seperated keywords or sentences that makes sense\n\nUse parenthesis to highlight specific words or spaces and use a colon followed by an weight to the end of a word or group to increase or decrease weight, for example (red panda:1.2) banana:1.5 or (yellow rose:0.9)\n\nThe negative prompt should be comma-seperated keywords, and not a sentence. And it should generally describe things we absolutely don't want in an image, if a image is about cartoon, we may put photorealistic in the negative. But if it's about a person, we should not put animal in negative (unless specified) because there are some similarities, in general it should be more qualitative than tangible such as JPEG artifacts, blurry, watermark etc. \n \n\nIf a specific aesthetic, style, studio etc is mentioned, it should be accentuated as much as possible, we should increase its weight (surrealistic:1.4) or (watercolor:2.0) etc., and also add other keywords, artists, references to increase its weight.\n---\nFollow the prompt as closely as possible without violating the guidelines. Generate both an amazing positive and negative prompt", "", ""], "color": "#432", "bgcolor": "#653"}, {"id": 86, "type": "ShowText|pysssss", "pos": [390, 1048], "size": [601.3523703613282, 220.90436047363278], "flags": {}, "order": 16, "mode": 0, "inputs": [{"name": "text", "type": "STRING", "link": 90, "widget": {"name": "text"}}], "outputs": [{"name": "STRING", "type": "STRING", "links": null, "shape": 6}], "properties": {"Node name for S&R": "ShowText|pysssss"}, "widgets_values": ["", "A breathtaking (chocolate mountain) scene, featuring a majestic peak made of rich, dark chocolate, surrounded by cascading rivers of creamy milk chocolate. The sunlight glistens on the edible landscape, highlighting the intricate details and textures, creating a mouth-watering masterpiece"]}, {"id": 55, "type": "Text _O", "pos": [-370, 375], "size": {"0": 400, "1": 200}, "flags": {}, "order": 5, "mode": 0, "outputs": [{"name": "STRING", "type": "STRING", "links": [56, 59], "shape": 3, "slot_index": 0}], "properties": {"Node name for S&R": "Text _O"}, "widgets_values": [""], "color": "#322", "bgcolor": "#533"}, {"id": 54, "type": "Text _O", "pos": [-370, 128], "size": {"0": 400, "1": 200}, "flags": {}, "order": 6, "mode": 0, "outputs": [{"name": "STRING", "type": "STRING", "links": [55, 61], "shape": 3, "slot_index": 0}], "properties": {"Node name for S&R": "Text _O"}, "widgets_values": ["chocolate mountain"], "color": "#232", "bgcolor": "#353"}], "links": [[28, 36, 0, 37, 1, "STRING"], [36, 37, 0, 42, 1, "CONDITIONING"], [37, 38, 0, 42, 2, "CONDITIONING"], [40, 47, 0, 49, 1, "CONDITIONING"], [41, 48, 0, 49, 2, "CONDITIONING"], [45, 40, 0, 51, 0, "MODEL"], [46, 40, 1, 51, 1, "CLIP"], [47, 40, 2, 51, 2, "VAE"], [48, 45, 0, 52, 0, "LATENT"], [52, 36, 1, 38, 1, "STRING"], [55, 54, 0, 36, 0, "STRING"], [56, 55, 0, 36, 1, "STRING"], [59, 55, 0, 56, 0, "*"], [60, 56, 0, 48, 1, "STRING"], [61, 54, 0, 57, 0, "*"], [62, 57, 0, 47, 1, "STRING"], [71, 67, 0, 36, 2, "COMBO"], [84, 80, 0, 36, 3, "STRING"], [88, 67, 0, 80, 0, "COMBO"], [90, 36, 0, 86, 0, "STRING"]], "groups": [], "config": {}, "extra": {}, "version": 0.4}